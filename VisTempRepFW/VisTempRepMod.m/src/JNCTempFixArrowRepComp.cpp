//===================================================================
// COPYRIGHT Tony 2017/03/29
//===================================================================
// JNCTempFixArrowRepComp.cpp
// Header definition of class JNCTempFixArrowRepComp
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2017/03/29 Creation: Code generated by the 3DS wizard
//===================================================================

#include <iostream>
using std::cout;
using std::endl;

#include "JNCTempFixArrowRepComp.h"

CATImplementClass(JNCTempFixArrowRepComp,Implementation,CATModelForRep3D,CATNull);

#include "TIE_JNCITempFixArrowRep.h"
TIE_JNCITempFixArrowRep(JNCTempFixArrowRepComp);


//-----------------------------------------------------------------------------
// JNCTempFixArrowRepComp : constructor
//-----------------------------------------------------------------------------
JNCTempFixArrowRepComp::JNCTempFixArrowRepComp():CATModelForRep3D()
{
}

//-----------------------------------------------------------------------------
// JNCTempFixArrowRepComp : destructor
//-----------------------------------------------------------------------------
JNCTempFixArrowRepComp::~JNCTempFixArrowRepComp()
{
}



//------------------------------------
//	JNCITempFixArrowRep
//------------------------------------
HRESULT JNCTempFixArrowRepComp::CreateDefaultTypeFixArrow(CATMathPoint *iOrigin,CATMathDirection * iDir,int color1,int color2,int color3)
{
	_mathPt = (*iOrigin);
	_mathDir = (*iDir);

	CAT3DCustomRep * pRepForCenter = CAT3DCustomRep::CreateRep();

	int lenAll=20;
	int lenHead=5;
	int lenBase=0;
	CATMathPointf iOrign(_mathPt.GetX(), _mathPt.GetY(), _mathPt.GetZ());
	CATMathDirectionf iDirf(_mathDir.GetX(), _mathDir.GetY(), _mathDir.GetZ());
	CAT3DFixedArrowGP *arrow = new CAT3DFixedArrowGP(iOrign, iDirf, lenAll, lenHead, lenBase);

	//set color
	CATGraphicAttributeSet attGP;
	attGP.SetColor(TRUECOLOR);
	attGP.SetColorRGBA(color1,color2,color3);
	attGP.SetThickness(4);

	//add graphic primitive
	pRepForCenter->AddGP(arrow,attGP);

	SetGraphicRepresentation(pRepForCenter);

	return S_OK;
}
HRESULT JNCTempFixArrowRepComp::SetGraphicRepresentation (CATRep *  iRep ) 
{
	SetRep(iRep);
	return S_OK;
} 
HRESULT JNCTempFixArrowRepComp::GetGraphicRepresentation (CATRep **  oRep ) 
{
	(*oRep) = GiveRep();
	return S_OK;
} 
HRESULT JNCTempFixArrowRepComp::GetOriginalPoint(CATMathPoint &iMathPoint) 
{
	iMathPoint = _mathPt;
	return S_OK;
} 
HRESULT JNCTempFixArrowRepComp::GetAlignDir(CATMathDirection &iMathDir) 
{
	iMathDir = _mathDir;
	return S_OK;
} 

HRESULT JNCTempFixArrowRepComp::ChangeDefaultTypeFixArrow(CATMathPoint *iOrigin,CATMathDirection * iDir,int color1,int color2,int color3)
{
	HRESULT rc = E_FAIL;
	CATRep * pRep = NULL;
	this->GetGraphicRepresentation(&pRep);
	if (NULL != pRep)
	{
		cout<<"Get Rep ok"<<endl;
		CAT3DCustomRep * pRepCus = (CAT3DCustomRep *)pRep;
		if (NULL != pRepCus)
		{
			cout<<"Get CustRep ok"<<endl;
			CATGraphicPrimitive* OldGP = pRepCus->GetGP(0);
			pRepCus->RemoveGP(OldGP);

			int lenAll=20;
			int lenHead=5;
			int lenBase=0;
			CATMathPointf iOrign(_mathPt.GetX(), _mathPt.GetY(), _mathPt.GetZ());
			CATMathDirectionf iDirf(_mathDir.GetX(), _mathDir.GetY(), _mathDir.GetZ());
			CAT3DFixedArrowGP *arrow = new CAT3DFixedArrowGP(iOrign, iDirf, lenAll, lenHead, lenBase);

			//set color
			CATGraphicAttributeSet attGP;
			attGP.SetColor(TRUECOLOR);
			attGP.SetColorRGBA(color1,color2,color3);
			attGP.SetThickness(4);

			//add graphic primitive
			pRepCus->AddGP(arrow,attGP);

			rc = S_OK;
		}
		else
		{
			cout<<"Get CustRep Fail"<<endl;
		}
	}
	else
	{
		cout<<"Get Rep Fail"<<endl;
	}

	return rc ;
}






