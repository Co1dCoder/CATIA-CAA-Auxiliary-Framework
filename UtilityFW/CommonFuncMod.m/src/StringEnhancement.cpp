//===================================================================
// COPYRIGHT Tony 2017/03/24
//===================================================================
// StringEnhancement.cpp
// Header definition of class StringEnhancement
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2017/03/24 Creation: Code generated by the 3DS wizard
//===================================================================

#include "StringEnhancement.h"

namespace JNCTonySpace{

void ConvertCapitalLetterToInt(CATUnicodeString istrCapitalLetter, int &oDecimal)
{
	oDecimal = 0;
	int iLength = istrCapitalLetter.GetLengthInChar();
	for (int i =iLength-1; i >=0; i--)
	{
		char charTempLetter = istrCapitalLetter.operator[](i);
		int iValue = charTempLetter-'A'+1;
		oDecimal += iValue* pow(26, iLength-i-1);
	}
}

void ConvertIntToCapitalLetter( unsigned int iDecimal, CATUnicodeString &ostrCapitalLetter )
{
	ostrCapitalLetter = "";
	int RemainInt = 0;
	char Letter ;
	CATUnicodeString StringLetter;
	if (iDecimal <= 0)
		return;

	while (iDecimal != 0)
	{
		iDecimal--;
		RemainInt = iDecimal % 26;
		Letter = 65 + RemainInt;
		StringLetter = CATUnicodeString(Letter);
		ostrCapitalLetter = StringLetter + ostrCapitalLetter;
		iDecimal = iDecimal / 26;
	}
}

HRESULT SplitString( CATUnicodeString iString, CATUnicodeString iSeparator, CATListOfCATUnicodeString &oStrList )
{
	CATUnicodeString strTemp, strTemp2;
	oStrList.RemoveAll();
	int iLocation = iString.SearchSubString(iSeparator, 0, CATUnicodeString::CATSearchModeForward);
	if (iLocation == -1) //未搜到分隔符
	{
		oStrList.Append(iString);
		return E_FAIL;
	}

	int iSize=0;
	strTemp = iString;
	while(iLocation != -1)
	{
		strTemp2 = strTemp.SubString(0, iLocation);
		oStrList.Append(strTemp2);

		iSize = strTemp.GetLengthInChar();
		strTemp2 = strTemp.SubString(iLocation + iSeparator.GetLengthInChar(), iSize - iLocation - iSeparator.GetLengthInChar());
		strTemp = strTemp2;

		iLocation = strTemp.SearchSubString(iSeparator, 0, CATUnicodeString::CATSearchModeForward);
	}
	if (strTemp != iString)
	{
		oStrList.Append(strTemp);
	}
	return S_OK;
}

std::wstring ConvertToWideString( CATUnicodeString iString )
{
	std::wstring re;
	int le = iString.GetLengthInChar() > 0 ? iString.GetLengthInChar() : 1;
	wchar_t* str_wchar = new wchar_t[le*2];
	iString.ConvertToWChar(str_wchar);
	re = str_wchar;
	delete[] str_wchar;

	return re;
}

}




